
   

<%= form_for(@product) do |f| %>
  <% if @product.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@product.errors.count, "error") %> prohibited this product from being saved:</h2>

      <ul>
      <% @product.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>



  <div class="col-md-12">
   <label>Full Title</label><br>
     <div class="field">
       <%= f.text_field :title, :class => "form-control", 
    required: true %>
    </div>
    <br><br>
  </div>

  <div class="col-md-6">
   <label>Short Title</label><br>
     <div class="field">
       <%= f.text_field :short_title, :class => "form-control", maxlength: 18, required: true %>
    </div>
  </div>

  <div class="col-md-6">
   <label>Quantity</label><br>
    <div class="field">
      <%= f.number_field :quantity,  :class => "form-control" %>
    </div>
  </div>

  <div class="col-md-12">
        <br/><br/>
     </div>





  <div class="col-md-6">
   <label>Size</label><br>
     <div class="field">


      <div id="tags">
        <input type="text" value="" placeholder="Add a size"/>
      </div>


     <input id="product_product_size" name="product[product_size]" style="display:none;" />

     
    </div>
  </div>

  <div class="col-md-6">
   <label>Color</label><br>
    <div class="field">
        

      <div id="tags_color">
        <input type="text" value="" placeholder="Add a color"/>
      </div>


     <input id="product_product_color" name="product[product_color]" style="display:none;" />


    </div>
  </div>


  
  <div class="col-md-6"><br/><br/>
   <label>Model</label><br>
     <div class="field">


      <div id="tags_model">
        <input type="text" value="" placeholder="Add a model"/>
      </div>


     <input id="product_product_model" name="product[product_model]" style="display:none;" />

     
    </div>
  </div>



     <div class="col-md-12">
        <br/><br/>
     </div>
  <div class="col-md-6">
   <label>Actual Price (SGD)</label><br>
     <div class="field">
      <%= f.text_field :actual_price,  :class => "form-control" %>
    </div>
  </div>
  
  <div class="col-md-6">
   <label>Offer Price (SGD)</label><br>
    <div class="field">
      <%= f.text_field :discount_price, :class => "form-control" %>
    </div>
  </div>


 <div class="col-md-12"><br><br>
    <h3> Categories </h3><hr>

    <div class="col-md-4"><br/>
     <label>Product MainCategory</label><br>
      <div class="field">
        <%= f.select(:product_category, Product::PRODUCTCATEGORY) %>
      </div>
    </div>

      <div class="col-md-4"><br/>
     <label>Product SubCategory</label><br>
      <div class="field">
          <%= f.select(:product_subcategory, Product::PRODUCTSUBCATEGORY) %>
      </div>
    </div>

        <div class="col-md-4"><br/>
     <label>Category</label><br>
      <div class="field">
          <%= f.select(:product_childsubcategory, Product::PRODUCTCHILDSUBCATEGORY) %>
      </div>
    </div>

</div>

  <div class="col-md-12"><br><br>
<!--  -->
     <label> Description </label><br>
    <div id="toolbar_desc">
        <!-- Add font size dropdown -->
        <select class="ql-size">
          <option value="small"></option>
          <!-- Note a missing, thus falsy value, is used to reset to default -->
          <option selected></option>
          <option value="large"></option>
          <option value="huge"></option>
        </select>
        <!-- Add a bold button -->
        <button class="ql-bold"></button>
        <button class="ql-image"></button>
        <button class="ql-direction"></button>
        <button class="ql-align"></button>

        
        <!-- Add subscript and superscript buttons -->
        <button class="ql-script" value="sub"></button>
        <button class="ql-script" value="super"></button>



    </div>

    <div id="editor_desc">
       
    </div>

    <%= f.text_field :description, :class => "form-control", :style => "display:none;" %>

    </div>





  <div class="col-md-12"><br><br>
   <label>Youtube embedded code </label><br>
    <div class="field">
      <%= f.text_field :product_video, :class => "form-control" %>
    </div>
  </div>

  <div class="col-md-12"><br><br>
<!--  -->
     <label>Notice & Policy </label><br>
    <div id="toolbar">
        <!-- Add font size dropdown -->
        <select class="ql-size">
          <option value="small"></option>
          <!-- Note a missing, thus falsy value, is used to reset to default -->
          <option selected></option>
          <option value="large"></option>
          <option value="huge"></option>
        </select>
        <!-- Add a bold button -->
        <button class="ql-bold"></button>
        <button class="ql-image"></button>
        <button class="ql-direction"></button>
        <button class="ql-align"></button>

        
        <!-- Add subscript and superscript buttons -->
        <button class="ql-script" value="sub"></button>
        <button class="ql-script" value="super"></button>



    </div>

    <div id="editor">
       
    </div>

    <%= f.text_field :notice, :class => "form-control", :style=>"display:none;" %>

    </div>



      <div class="col-md-12">

        <br/><br/><br/><hr/>
        <h3>Specifications 
        <input class="btn btn-default" type="button" id="add_btn" value="Add">
        </h3>
         <hr/>
      </div>



        <div class="col-md-6">
           <div class="field">
             <%= f.text_field :specsq, multiple: true, :class => "form-control", :placeholder => "field" %>
          </div>
        </div>
        
        <div class="col-md-6">
          <div class="field">
             <%= f.text_field :specsa, multiple: true, :class => "form-control", :placeholder => "value"  %>
          </div>
        </div>


        <div id='cont' >

        </div>

        <!--  question ans answer -->

          <div class="col-md-12">

        <br/><br/><br/><hr/>
        <h3>Questions and Answer 
        <input class="btn btn-default" type="button" id="add_btn_2" value="Add">
        </h3>
         <hr/>
      </div>



        <div class="col-md-12">
           <div class="field">
             <%= f.text_field :question, multiple: true, :class => "form-control", :placeholder => "Question" %>
          </div>
        </div>
        
        <div class="col-md-12">
          <div class="field"><br/>
             <%= f.text_field :answer, multiple: true, :class => "form-control", :placeholder => "Answer" %>
          </div>
        </div>


        <div id='cont2' >

        </div>








     

    <div class="col-md-12">
     <br/><br/><br/>      <hr/>
      <h3> Delivery Option
      </h3>
       <hr/>
    </div>




    <div class="col-md-6">
       <label>Pick up</label><br>
         <div class="field">
           <%= f.check_box :pick_up %>
        </div>
    </div>

    <div class="col-md-6">
       <label>ebuy delivery</label><br>
         <div class="field">
           <%= f.check_box :ebuy_delivery %>
        </div>
    </div>


    <div class="col-md-6"><br/>
       <label>Delivery time</label><br>
         <div class="field">
            <%= f.text_field :delivery_time, :class => "form-control" %>
        </div>
    </div>


    <div class="col-md-6"><br/>
       <label>Delivery rate</label><br>
         <div class="field">
            <%= f.text_field :delivery_rate, :class => "form-control" %>
        </div>
    </div>



    <div class="col-md-12">
       <br/><br/><br/>      <hr/>
      <h3> Seller Option
      </h3>
       <hr/>
    </div>


      <div class="col-md-6"><br/>
       <label>Start to sell on</label><br>
         <div class="field">
            <%= f.datetime_local_field(:start_to_sell_on, :class => "form-control")  %>
        </div>
    </div>



      <div class="col-md-6"><br/>
       <label>End on</label><br>
         <div class="field">
            <%= f.datetime_local_field(:end_on, :class => "form-control" )  %>
        </div>
    </div>

  

    <div class="col-md-12">
       <br/><br/><br/>      <hr/>
      <h3> Product Image
      </h3>
       <hr/>
    </div>


     <div class="col-md-12">
      <div class="col-md-2">
        <%= image_tag @product.avatar1.url(:thumb) %>
      </div>
      <div class="col-md-2">
         <%= image_tag @product.avatar2.url(:thumb)%>
      </div>
      <div class="col-md-2">
         <%= image_tag @product.avatar3.url(:thumb) %>
      </div>

      <div class="col-md-2">
         <%= image_tag @product.avatar4.url(:thumb) %>
      </div>

        <div class="col-md-2">
         <%= image_tag @product.avatar5.url(:thumb) %>
      </div>
    </div>



    <div class="col-md-2"><br/>
       <label> Image 1</label><br>
         <div class="field">
            <%= f.file_field :avatar1 %>
             <img id="blah1" src="#" alt="Image 1" />
        </div>
    </div>


        <div class="col-md-2"><br/>
       <label> Image 2</label><br>
         <div class="field">
            <%= f.file_field :avatar2 %>
             <img id="blah2" src="#" alt="Image 2" />
        </div>
    </div>


        <div class="col-md-2"><br/>
       <label> Image 3</label><br>
         <div class="field">
            <%= f.file_field :avatar3 %>
             <img id="blah3" src="#" alt="Image 3" />
        </div>
    </div>



    <div class="col-md-2"><br/>
       <label> Image 4</label><br>
         <div class="field">
            <%= f.file_field :avatar4 %>
             <img id="blah4" src="#" alt="Image 4" />
        </div>
    </div>



    <div class="col-md-2"><br/>
       <label> Image 5</label><br>
         <div class="field">
            <%= f.file_field :avatar5 %>
             <img id="blah5" src="#" alt="Image 5" />
        </div>
    </div>

<!-- product others -->


    <div class="col-md-6">    <br/>
     <label>Place at home page?</label><br>
       <div class="field"> 
             <%= f.check_box :show_at %>
      </div>
    </div>

    <div class="col-md-6">    <br/>
     <label>Time sales?</label><br>
       <div class="field"> 
             <%= f.check_box :time_sale %>
      </div>
    </div>

 





  <div class="col-md-12"><br/>
    <div class="actions">
      <%= f.submit :class=>"btn btn-success btn-lg", :id=> "mysubmitbutton" %>
    </div>
  </div>
<% end %>


<script type="text/javascript">
  
$( "#add_btn" ).click(function() {

    var textarea =  $('<div class="col-md-6"><div class="field"><br/><input multiple="multiple" class="form-control" type="text" name="product[specsq][]" id="product_specsq"></div></div>  <div class="col-md-6"><div class="field"><br/><input multiple="multiple" class="form-control" type="text" name="product[specsa][]" id="product_specsa"></div></div><br/><hr/>');
    $('#cont').append(textarea);


});



$( "#add_btn_2" ).click(function() {

    var textarea =  $('<div class="col-md-12"><div class="field"><br/><input multiple="multiple" class="form-control" type="text" name="product[question][]" id="product_question"></div></div> <div class="col-md-12"><div class="field"><br/><input multiple="multiple" class="form-control" type="text" name="product[answer][]" id="product_answer"></div></div><br/><hr/>');
    $('#cont2').append(textarea);


});


</script>






  <script>
  $( function() {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .attr("id","product_product_subcategory")
          .attr("name","product[product_subcategory]")
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            classes: {
              "ui-tooltip": "ui-state-highlight"
            }
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          .attr( "title", "Show All Items" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .on( "mousedown", function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .on( "click", function() {
            input.trigger( "focus" );
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass empty string as value to search for, displaying all results
            input.autocomplete( "search", "" );
          });
      },
 
      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " didn't match any item" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.autocomplete( "instance" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
 
    $( "#product_product_subcategory" ).combobox();
    $( "#toggle" ).on( "click", function() {
      $( "#product_product_subcategory" ).toggle();
    });
  } );
  </script>




  <script>
  $( function() {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .attr("id","product_product_childsubcategory")
          .attr("name","product[product_childsubcategory]")
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            classes: {
              "ui-tooltip": "ui-state-highlight"
            }
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          .attr( "title", "Show All Items" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .on( "mousedown", function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .on( "click", function() {
            input.trigger( "focus" );
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass empty string as value to search for, displaying all results
            input.autocomplete( "search", "" );
          });
      },
 
      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " didn't match any item" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.autocomplete( "instance" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
 
    $( "#product_product_childsubcategory" ).combobox();
    $( "#toggle" ).on( "click", function() {
      $( "#product_product_childsubcategory" ).toggle();
    });
  } );
  </script>


  <script type="text/javascript">

function readURL1(input) {

    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $('#blah1').attr('src', e.target.result);
        }

        reader.readAsDataURL(input.files[0]);
    }
}

$("#product_avatar1").change(function(){
    readURL1(this);
});


function readURL2(input) {

    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $('#blah2').attr('src', e.target.result);
        }

        reader.readAsDataURL(input.files[0]);
    }
}

$("#product_avatar2").change(function(){
    readURL2(this);
});



function readURL3(input) {

    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $('#blah3').attr('src', e.target.result);
        }

        reader.readAsDataURL(input.files[0]);
    }
}

$("#product_avatar3").change(function(){
    readURL3(this);
});



function readURL4(input) {

    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $('#blah4').attr('src', e.target.result);
        }

        reader.readAsDataURL(input.files[0]);
    }
}

$("#product_avatar4").change(function(){
    readURL4(this);
});




function readURL5(input) {

    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $('#blah5').attr('src', e.target.result);
        }

        reader.readAsDataURL(input.files[0]);
    }
}

$("#product_avatar5").change(function(){
    readURL5(this);
});


  </script>







  <script type="text/javascript">

function readURL1_product(input) {

    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $('#blah1_product').attr('src', e.target.result);
        }

        reader.readAsDataURL(input.files[0]);
    }
}

$("#product_other_avatar1").change(function(){
    readURL1_product(this);
});


function readURL2_product(input) {

    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $('#blah2_product').attr('src', e.target.result);
        }

        reader.readAsDataURL(input.files[0]);
    }
}

$("#product_other_avatar2").change(function(){
    readURL2_product(this);
});



function readURL3_product(input) {

    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $('#blah3_product').attr('src', e.target.result);
        }

        reader.readAsDataURL(input.files[0]);
    }
}

$("#product_other_avatar3").change(function(){
    readURL3_product(this);
});



function readURL4_product(input) {

    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $('#blah4_product').attr('src', e.target.result);
        }

        reader.readAsDataURL(input.files[0]);
    }
}

$("#product_other_avatar4").change(function(){
    readURL4_product(this);
});




function readURL5_product(input) {

    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $('#blah5_product').attr('src', e.target.result);
        }

        reader.readAsDataURL(input.files[0]);
    }
}

$("#product_other_avatar5").change(function(){
    readURL5_product(this);
});


  </script>








<style type="text/css">
  

#tags{
  float:left;
  border:1px solid #ccc;
  padding:5px;
  font-family:Arial;
}
#tags > span{
  cursor:pointer;
  display:block;
  float:left;
  color:#fff;
  background:#3498DB;
  padding:5px;
  padding-right:25px;
  margin:4px;
}
#tags > span:hover{
  opacity:0.7;
}
#tags > span:after{
 position:absolute;
 content:"×";
 border:1px solid;
 padding:2px 5px;
 margin-left:3px;
 font-size:11px;
}
#tags > input{
  background:#eee;
  border:0;
  margin:4px;
  padding:7px;
  width:auto;
}

</style>



<!-- color dynamic -->




<script type="text/javascript">
  
$(function(){ // DOM ready

  // ::: TAGS BOX

  $("#tags_color input").on({
    focusout : function() {
      var mytxt = this.value.replace(/[^a-z0-9\+\-\.\#]/ig,''); // allowed characters
      var txt = mytxt+",";
      if(txt) $("<span/>", {text:txt, insertBefore:this});
      this.value = "";
    },
    keyup : function(ev) {
      // if: comma|enter (delimit more keyCodes with | pipe)
      if(/(188|13)/.test(ev.which)) $(this).focusout(); 
    }
  });
  $('#tags_color').on('click', 'span', function() {
    $(this).remove(); 
  });

});

</script>


<script type="text/javascript">
  
$(function(){ // DOM ready

  // ::: TAGS BOX

  $("#tags_model input").on({
    focusout : function() {
      var mytxt = this.value.replace(/[^a-z0-9\+\-\.\#]/ig,''); // allowed characters
      var txt = mytxt+",";
      if(txt) $("<span/>", {text:txt, insertBefore:this});
      this.value = "";
    },
    keyup : function(ev) {
      // if: comma|enter (delimit more keyCodes with | pipe)
      if(/(188|13)/.test(ev.which)) $(this).focusout(); 
    }
  });
  $('#tags_model').on('click', 'span', function() {
    $(this).remove(); 
  });

});

</script>


<style type="text/css">
  

#tags_color{
  float:left;
  border:1px solid #ccc;
  padding:5px;
  font-family:Arial;
}
#tags_color > span{
  cursor:pointer;
  display:block;
  float:left;
  color:#fff;
  background:#3498DB;
  padding:5px;
  padding-right:25px;
  margin:4px;
}
#tags_color > span:hover{
  opacity:0.7;
}
#tags_color > span:after{
 position:absolute;
 content:"×";
 border:1px solid;
 padding:2px 5px;
 margin-left:3px;
 font-size:11px;
}
#tags_color > input{
  background:#eee;
  border:0;
  margin:4px;
  padding:7px;
  width:auto;
}

</style>





<style type="text/css">
  

#tags_model{
  float:left;
  border:1px solid #ccc;
  padding:5px;
  font-family:Arial;
}
#tags_model > span{
  cursor:pointer;
  display:block;
  float:left;
  color:#fff;
  background:#3498DB;
  padding:5px;
  padding-right:25px;
  margin:4px;
}
#tags_model > span:hover{
  opacity:0.7;
}
#tags_model > span:after{
 position:absolute;
 content:"×";
 border:1px solid;
 padding:2px 5px;
 margin-left:3px;
 font-size:11px;
}
#tags_model > input{
  background:#eee;
  border:0;
  margin:4px;
  padding:7px;
  width:auto;
}

</style>