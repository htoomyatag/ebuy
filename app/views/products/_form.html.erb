<%= form_for(@product) do |f| %>
  <% if @product.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@product.errors.count, "error") %> prohibited this product from being saved:</h2>

      <ul>
      <% @product.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>



  <div class="col-md-6">
   <label>Title</label><br>
     <div class="field">
       <%= f.text_field :title, :class => "form-control" %>
    </div>
  </div>

  <div class="col-md-6">
   <label>Quantity</label><br>
    <div class="field">
      <%= f.number_field :quantity,  :class => "form-control" %>
    </div>
  </div>


  <div class="col-md-6">
   <label>Size</label><br>
     <div class="field">
       <%= f.text_field :product_size, :class => "form-control" %>
    </div>
  </div>

  <div class="col-md-6">
   <label>Color</label><br>
    <div class="field">
      <%= f.text_field :product_color,  :class => "form-control" %>
    </div>
  </div>



  <div class="col-md-6">
   <label>Actual Price</label><br>
     <div class="field">
      <%= f.text_field :actual_price,  :class => "form-control" %>
    </div>
  </div>
  
  <div class="col-md-6">
   <label>Offer Price</label><br>
    <div class="field">
      <%= f.text_field :discount_price, :class => "form-control" %>
    </div>
  </div>


  <div class="col-md-6"><br/>
   <label>Product Category</label><br>
    <div class="field">
      <%= f.select(:product_category, Product::PRODUCTCATEGORY) %>
    </div>
  </div>




    <div class="col-md-6"><br/>
   <label>Product Sub Category</label><br>
    <div class="field">

        <%= f.select(:product_subcategory, Product::PRODUCTSUBCATEGORY) %>
     



    </div>
  </div>


 





  <div class="col-md-12"><br><br>
   <label>Product You tube embedded code </label><br>
    <div class="field">
      <%= f.text_field :product_video, :class => "form-control" %>
    </div>
  </div>





      <div class="col-md-12">

        <br/><br/><br/>      <hr/>
        <h3>Specifications 
        <input class="btn btn-default" type="button" id="add_btn" value="Add">
        </h3>
         <hr/>
      </div>



        <div class="col-md-6">
           <div class="field">
             <%= f.text_field :specs, multiple: true, :class => "form-control" %>
          </div>
        </div>
        
        <div class="col-md-6">
          <div class="field">
             <%= f.text_field :specs, multiple: true, :class => "form-control" %>
          </div>
        </div>


        <div id='cont' >

        </div>


     

    <div class="col-md-12">
     <br/><br/><br/>      <hr/>
      <h3> Delivery Option
      </h3>
       <hr/>
    </div>




    <div class="col-md-6">
       <label>Pick up</label><br>
         <div class="field">
           <%= f.check_box :pick_up %>
        </div>
    </div>

    <div class="col-md-6">
       <label>ebuy delivery</label><br>
         <div class="field">
           <%= f.check_box :ebuy_delivery %>
        </div>
    </div>


    <div class="col-md-6"><br/>
       <label>Delivery time</label><br>
         <div class="field">
            <%= f.number_field :delivery_time, :class => "form-control" %>
        </div>
    </div>


    <div class="col-md-6"><br/>
       <label>Delivery rate</label><br>
         <div class="field">
            <%= f.number_field :delivery_rate, :class => "form-control" %>
        </div>
    </div>



    <div class="col-md-12">
       <br/><br/><br/>      <hr/>
      <h3> Seller Option
      </h3>
       <hr/>
    </div>


      <div class="col-md-6"><br/>
       <label>Start to sell on</label><br>
         <div class="field">
            <%= f.date_field :start_to_sell_on, :class => "form-control" %>
        </div>
    </div>



      <div class="col-md-6"><br/>
       <label>End on</label><br>
         <div class="field">
            <%= f.date_field :end_on, :class => "form-control" %>
        </div>
    </div>

  


 

 



  <div class="col-md-12"><br/>
    <div class="actions">
      <%= f.submit :class=>"btn btn-default" %>
    </div>
  </div>
<% end %>


<script type="text/javascript">
  
$( "#add_btn" ).click(function() {

    var textarea =  $('<div class="col-md-6"><div class="field"><input multiple="multiple" class="form-control" type="text" name="product[specs][]" id="product_specs"></div></div>  <div class="col-md-6"><div class="field"><input multiple="multiple" class="form-control" type="text" name="product[specs][]" id="product_specs"></div></div><br/><hr/>');
    $('#cont').append(textarea);


});

</script>






  <script>
  $( function() {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .attr("id","product_product_subcategory")
          .attr("name","product[product_subcategory]")
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            classes: {
              "ui-tooltip": "ui-state-highlight"
            }
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          .attr( "title", "Show All Items" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .on( "mousedown", function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .on( "click", function() {
            input.trigger( "focus" );
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass empty string as value to search for, displaying all results
            input.autocomplete( "search", "" );
          });
      },
 
      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " didn't match any item" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.autocomplete( "instance" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
 
    $( "#product_product_subcategory" ).combobox();
    $( "#toggle" ).on( "click", function() {
      $( "#product_product_subcategory" ).toggle();
    });
  } );
  </script>